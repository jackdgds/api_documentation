{
  
  "0": {
    "title": "",
    "content": "404 . Page not found :( . The requested page could not be found. .",
    "url": "http://localhost:4000/404.html",
    "relUrl": "/404.html"
  }
  ,"1": {
    "title": "Introduction to APIs",
    "content": "Introduction to APIs . API stands for Application Programming Interface. . An API acts as an interface between two systems, allowing users to integrate web technology like features, data, and content from other web services in their own applications. . A simple way to think of an API is to compare one to a calculator: you input some numbers (make a call), something happens in the backend (the calculation), and the data are returned in a format you can use. . APIs are used all over the Internet in all manner of applications and services. A very common example of an API is a travel booking site: you define where and when you want to travel, the API call is made by submitting the request, and the available fares and other options are returned to you. Most of these services do not host the travel information locally — they use APIs to gather it from affiliates and return it via their interface. . It is common for companies to have many different APIs so they can provide services from many of their features. .",
    "url": "http://localhost:4000/pages/api_intro.html",
    "relUrl": "/pages/api_intro.html"
  }
  ,"2": {
    "title": "API Methods",
    "content": "API Methods . The following two basic methods indicate the allowed interactions with the Receptiviti API: . GET retrieves a resource. | POST creates a resource. | .",
    "url": "http://localhost:4000/pages/api_methods.html",
    "relUrl": "/pages/api_methods.html"
  }
  ,"3": {
    "title": "API Rate Limiting",
    "content": "API Rate Limiting . Once your account is authenticated, you will be able to make 10,000 calls to the Receptiviti API. Authenticated requests are associated with the authenticated user. . If you prefer to start with a free trial, you will have access to the full 10,000 calls for the first two weeks. If you wish to continue, you will enter our license agreement and the will then have the remainder of your unused calls for the rest of the month until the threshold rolls over for the next month. .",
    "url": "http://localhost:4000/pages/api_rate_limiting.html",
    "relUrl": "/pages/api_rate_limiting.html"
  }
  ,"4": {
    "title": "API Status and Error Codes",
    "content": "API Status and Error Codes . The Receptiviti API returns HTTP status codes as well as JSON-based error codes and messages. . Code Description . 200 | Created — this is a successful API call. | . 400 | Bad request — there is something wrong or missing in the formatting of the API call. | . 401 | Unauthorized — something is missing or inaccurate in the credentials. | . 5xx | Server error. (Note: If you see anything like this, feel free to report it to us.) | . Response Header Example . access-control-allow-credentials: true access-control-allow-origin: https://api-v3.receptiviti.com access-control-expose-headers: Content-Type, X-Total-Count content-length: 10257 content-type: application/hal+json date: Thu, 12 Mar 2020 16:50:12 GMT retry-after: 2590118 server: nginx/1.16.1 status: 200 vary: Origin, Cookie x-ratelimit-limit: 150000000 x-ratelimit-remaining: 149999997 x-ratelimit-reset: 1586621931 .",
    "url": "http://localhost:4000/pages/api_status_error_codes.html",
    "relUrl": "/pages/api_status_error_codes.html"
  }
  ,"5": {
    "title": "Receptiviti API Endpoints",
    "content": "Receptiviti API Endpoints . . GET /ping . Sends a ping to the Receptiviti API, validating the API Key and Secret Key, and returns a pong response if successful. . Example Request . https://api-v3.receptiviti.com/v3/api/ping . Example Response . &quot;pong&quot;: &quot;Hello Your Name&quot; . . GET /content . Makes a call to the API and analyzes text sample(s) and returns LIWC and Receptiviti scores. . Example Request . https://api-v3.receptiviti.com/v3/api/content . Example Response . { &quot;submitted_text&quot;: &quot;Hello how are you?&quot;, &quot;user&quot;: { &quot;email&quot;: &quot;myemail@mystartup.com&quot;, &quot;organization&quot;: &quot;mystartup.com&quot;, &quot;roles&quot;: [ &quot;liwc_scorers&quot;, &quot;recep_scorers&quot; ], &quot;rate_limit&quot;: &quot;100000/month&quot;, &quot;remaining_this_month&quot;: 95670, &quot;available_bundles&quot;: [ &quot;jokes_bundle_47&quot;, &quot;swear_words_bundle_22&quot; ], &quot;available_packages&quot;: [ &quot;jokes_bundle_47_pack23&quot;, &quot;jokes_bundle_47_pack24&quot;, &quot;swear_words_bundle_22_pack40&quot; ] }, &quot;context&quot;: &quot;RPA&quot;, &quot;recep_subscription&quot;: [ &quot;openness&quot;, &quot;conscientiousness&quot;, &quot;extraversion&quot;, &quot;agreeableness&quot;, &quot;neuroticism&quot;, &quot;artistic&quot;, &quot;adventurous&quot;, &quot;intellectual&quot;, &quot;liberal&quot;, &quot;imaginative&quot;, &quot;emotionally_aware&quot;, &quot;sociable&quot;, &quot;friendly&quot;, &quot;assertive&quot;, &quot;active&quot;, &quot;energetic&quot;, &quot;cheerful&quot; ], &quot;matrix&quot;: &quot;pa_english&quot;, &quot;matrix_version&quot;: 43, &quot;recep_codebase&quot;: &quot;recep-shannon&quot;, &quot;recep_codebase_version&quot;: &quot;x58jg4o6hg&quot;, &quot;errors&quot;: [ { &quot;error_string&quot;: &quot;100 - ContextNotFound&quot;, &quot;error_code&quot;: 100, &quot;description&quot;: &quot;100 - &quot;Context not found &quot;. The context name submitted was not found. It may be misspelled. Check the list of contexts for your organization or account to find the available contexts and their correct spelling. Alternatively the context you submitted may not be owned by your account or organization.&quot;, &quot;detail&quot;: &quot;The receptiviti scoring matrix with the name &quot;mybogusmatrix &quot; was not found in the list of dictionaries for your organization &quot;mystartup.org &quot; nor your account &quot;myemail@mystartup.com &quot;.&quot; } ] } . Query String Parameters . The asterisk indicates a required field. . Query String Parameters Type Description . language_content* | String | This is the actual content of the text sample(s) you provide to the API. | . content_tags | String | If using, list your tags here. (Default: []) | . content_handle | String | A reference ID for the content. This is stored and returned on subsequent GET calls. | . language | String | This specifies the language of the content. Currently, The supported languages are English, Spanish, Dutch, French, and German. | . content_source* | Integer | This is the source of the material of the text sample being provided. 1=Personal Writing2=Personal Email Correspondence3=Professional Correspondence4=Social Media5=Commercial Writing6=Professional or Scientific Writing0=OtherDefault: 0 | . content_date* | String | This specifies the date of the content. The default will be the date the call is made. Format: YYYY-MM-DDT00:00:00.00000 | . recipient_id | String | If the writing sample was a conversation with another person who has been created in the system, provide the recipient_ID for that person. | . .",
    "url": "http://localhost:4000/pages/enpoints.html",
    "relUrl": "/pages/enpoints.html"
  }
  ,"6": {
    "title": "Example API Call",
    "content": "Example API Call . curl -X POST &quot;https://api-v3.receptiviti.com/v3/api/content&quot; -H &quot;accept: application/json&quot; -H &quot;X-API-SECRET-KEY: Enter your API Secret Key here&quot; -H &quot;X-API-KEY: Enter your API Key here&quot; -H &quot;Content-Type: application/json&quot; -d &quot;{ &quot;content_tags &quot;: [ &quot;string &quot; ], &quot;content_handle &quot;: &quot;string &quot;, &quot;language &quot;: &quot;English &quot;, &quot;content_source &quot;: 0, &quot;content_date &quot;: &quot;2020-01-01 &quot;, &quot;recipient_id &quot;: &quot;string &quot;, &quot;language_content &quot;: &quot;Enter your language sample here &quot;} .",
    "url": "http://localhost:4000/pages/example_api_call.html",
    "relUrl": "/pages/example_api_call.html"
  }
  ,"7": {
    "title": "Example API Response",
    "content": "Example API Response . { &quot;db_id&quot;: null, &quot;content_handle&quot;: &quot;string&quot;, &quot;content_source&quot;: 0, &quot;content_date&quot;: &quot;2020-01-05T00:00:00&quot;, &quot;content_tags&quot;: [ &quot;string&quot; ], &quot;user_id&quot;: 185, &quot;user&quot;: { &quot;name&quot;: &quot;your name&quot;, &quot;email&quot;: &quot;name@address.com&quot;, &quot;first_name&quot;: &quot;your&quot;, &quot;last_name&quot;: &quot;name&quot;, &quot;company_name&quot;: &quot;company_name&quot;, &quot;job_title&quot;: null, &quot;has_twitter_api_access&quot;: false, &quot;is_on_trial&quot;: false, &quot;status&quot;: &quot;active&quot;, &quot;rate_limit&quot;: &quot;150000000/month&quot; }, &quot;language&quot;: &quot;english&quot;, &quot;organa_scores&quot;: {}, &quot;word_count&quot;: 308, &quot;receptiviti_scores&quot;: { &quot;percentiles&quot;: { &quot;openness&quot;: 60.35874031001012, &quot;conscientiousness&quot;: 47.63460475709875, &quot;extraversion&quot;: 68.61794649270975, &quot;agreeableness&quot;: 23.770726094706376, &quot;neuroticism&quot;: 38.26375176692578, &quot;artistic&quot;: 70.74024541968724, &quot;adventurous&quot;: 70.72719108084947, &quot;intellectual&quot;: 65.31664106266301, &quot;liberal&quot;: 45.957687012634096, &quot;imaginative&quot;: 39.57805467483369, &quot;emotionally_aware&quot;: 46.30843865524487, &quot;sociable&quot;: 45.112194922805394, &quot;friendly&quot;: 83.02507507551876, &quot;assertive&quot;: 17.364791154191956, &quot;active&quot;: 80.06300986133593, &quot;energetic&quot;: 66.77543339169682, &quot;cheerful&quot;: 54.67424200232799, &quot;self_assured&quot;: 77.96717129846508, &quot;disciplined&quot;: 67.13124382113041, &quot;ambitious&quot;: 36.78308996025509, &quot;dutiful&quot;: 29.99389100240535, &quot;cautious&quot;: 31.288680832320235, &quot;organized&quot;: 62.66400494525187, &quot;generous&quot;: 23.24624850071529, &quot;trusting&quot;: 84.41802904003006, &quot;cooperative&quot;: 53.149400064511816, &quot;empathetic&quot;: 11.481695213584484, &quot;genuine&quot;: 36.955079584878355, &quot;humble&quot;: 40.320633971838404, &quot;impulsive&quot;: 56.89544953967971, &quot;stressed&quot;: 29.20378120375311, &quot;anxious&quot;: 27.786171293008113, &quot;aggressive&quot;: 81.33069167632283, &quot;melancholy&quot;: 31.828787894900586, &quot;self_conscious&quot;: 25.06640787742607, &quot;thinking_style&quot;: 3.8032533389566767, &quot;power_driven&quot;: 67.63499187332971, &quot;independent&quot;: 9.880557192423902, &quot;cold&quot;: 90.55574033810831, &quot;insecure&quot;: 29.32309941503369, &quot;adjustment&quot;: 1, &quot;happiness&quot;: 22.018651756520708, &quot;persuasive&quot;: 67.98006007519217, &quot;social_skills&quot;: 83.18347675664145, &quot;type_a&quot;: 34.46151622954636, &quot;depression&quot;: 43.8910030132187, &quot;workhorse&quot;: 1.4133527919919986, &quot;family_oriented&quot;: 11.309620894425493, &quot;reward_bias&quot;: 60.95456730769231, &quot;friend_focus&quot;: 30.301344646823317, &quot;body_focus&quot;: 67.34647608497133, &quot;health_oriented&quot;: 25.687734709530453, &quot;sexual_focus&quot;: 38.59850307933812, &quot;food_focus&quot;: 36.90316610452883, &quot;leisure_oriented&quot;: 37.23078470899094, &quot;money_oriented&quot;: 58.45563972756394, &quot;religion_oriented&quot;: 99, &quot;work_oriented&quot;: 47.03203172773348, &quot;netspeak_focus&quot;: 23.812132689852675 }, &quot;raw_scores&quot;: { &quot;openness&quot;: 1.1381982786635403, &quot;conscientiousness&quot;: 0.4331444349331217, &quot;extraversion&quot;: 1.151019173645724, &quot;agreeableness&quot;: -5.799592314432606, &quot;neuroticism&quot;: 0.8613844854703785, &quot;artistic&quot;: 3.5573806948833036, &quot;adventurous&quot;: 2.492331694615021, &quot;intellectual&quot;: 9.930704352917726, &quot;liberal&quot;: 0.036949369178082225, &quot;imaginative&quot;: -1.182944827904076, &quot;emotionally_aware&quot;: 1.3713064471476208, &quot;sociable&quot;: 2.872627241081873, &quot;friendly&quot;: 4.24403300418768, &quot;assertive&quot;: 0.5079245123264008, &quot;active&quot;: -0.24593132029061893, &quot;energetic&quot;: 1.7109593148501365, &quot;cheerful&quot;: 1.3435768691848762, &quot;self_assured&quot;: 2.8579344256071906, &quot;disciplined&quot;: 2.577478860991675, &quot;ambitious&quot;: 3.143995396183884, &quot;dutiful&quot;: -3.349628602220175, &quot;cautious&quot;: 0.9145783802816903, &quot;organized&quot;: 0.6064343807040871, &quot;generous&quot;: -3.5398819963543335, &quot;trusting&quot;: 1.9215385210592864, &quot;cooperative&quot;: 4.100687975963773, &quot;empathetic&quot;: -2.9132711056667957, &quot;genuine&quot;: -1.5526738294215534, &quot;humble&quot;: -1.5675117360686865, &quot;impulsive&quot;: 2.5128879079775173, &quot;stressed&quot;: 3.367196595294918, &quot;anxious&quot;: 1.0321819763436495, &quot;aggressive&quot;: 6.026203943840621, &quot;melancholy&quot;: -0.7087007028936146, &quot;self_conscious&quot;: 0.6788997680043013, &quot;thinking_style&quot;: -3.5245195222986343, &quot;power_driven&quot;: 6.21943481254863, &quot;independent&quot;: -7.34765098358293, &quot;cold&quot;: 1.0354217482786114, &quot;insecure&quot;: -0.13944606287367417, &quot;adjustment&quot;: -7.1034745652133955, &quot;happiness&quot;: 3.6889774875835117, &quot;persuasive&quot;: -0.04440506424393842, &quot;social_skills&quot;: 2.5031353972708006, &quot;type_a&quot;: 6.975379446492398, &quot;depression&quot;: 0.6557945613384311, &quot;workhorse&quot;: -7.372384855283657, &quot;family_oriented&quot;: 1.3799609741742578, &quot;reward_bias&quot;: 1.6233766, &quot;friend_focus&quot;: 0, &quot;body_focus&quot;: 0.32467532, &quot;health_oriented&quot;: 0, &quot;sexual_focus&quot;: 0, &quot;food_focus&quot;: 0, &quot;leisure_oriented&quot;: 0.32467532, &quot;money_oriented&quot;: 0.64935065, &quot;religion_oriented&quot;: 0.9740259500000001, &quot;work_oriented&quot;: 0.9740259500000001, &quot;netspeak_focus&quot;: 0 }, &quot;warnings&quot;: { &quot;artistic&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;adventurous&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;intellectual&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;liberal&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;imaginative&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;emotionally_aware&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;sociable&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;friendly&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;assertive&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;active&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;energetic&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;cheerful&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;self_assured&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;disciplined&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;ambitious&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;dutiful&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;cautious&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;organized&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;generous&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;trusting&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;cooperative&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;empathetic&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;genuine&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;humble&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;impulsive&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;stressed&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;anxious&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;aggressive&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;melancholy&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ], &quot;self_conscious&quot;: [ &quot;Insufficient word count. Requires a minimum of 500 words for accurate results.&quot; ] } }, &quot;liwc_scores&quot;: { &quot;wc&quot;: 308, &quot;analytic&quot;: 15.448536, &quot;clout&quot;: 56.453506, &quot;authentic&quot;: 54.98235, &quot;tone&quot;: 83.48441, &quot;wps&quot;: 11, &quot;sixLtr&quot;: 0.14935064, &quot;dic&quot;: 0.9253247, &quot;categories&quot;: { &quot;function&quot;: 0.6136364, &quot;pronoun&quot;: 0.16558442, &quot;ppron&quot;: 0.064935066, &quot;i&quot;: 0.025974026, &quot;we&quot;: 0, &quot;you&quot;: 0.016233766, &quot;shehe&quot;: 0, &quot;they&quot;: 0.022727273, &quot;ipron&quot;: 0.10064935, &quot;article&quot;: 0.051948052, &quot;prep&quot;: 0.10714286, &quot;auxverb&quot;: 0.15584415, &quot;adverb&quot;: 0.097402595, &quot;conj&quot;: 0.055194806, &quot;negate&quot;: 0.032467533, &quot;verb&quot;: 0.23051947, &quot;adj&quot;: 0.035714287, &quot;compare&quot;: 0.016233766, &quot;interrog&quot;: 0.022727273, &quot;number&quot;: 0.016233766, &quot;quant&quot;: 0.025974026, &quot;affect&quot;: 0.045454547, &quot;posemo&quot;: 0.038961038, &quot;negemo&quot;: 0.0064935065, &quot;anx&quot;: 0, &quot;anger&quot;: 0.0032467532, &quot;sad&quot;: 0, &quot;social&quot;: 0.097402595, &quot;family&quot;: 0, &quot;friend&quot;: 0, &quot;female&quot;: 0.0032467532, &quot;male&quot;: 0, &quot;cogproc&quot;: 0.17207792, &quot;insight&quot;: 0.025974026, &quot;cause&quot;: 0.042207792, &quot;discrep&quot;: 0.012987013, &quot;tentat&quot;: 0.038961038, &quot;certain&quot;: 0.032467533, &quot;differ&quot;: 0.038961038, &quot;percept&quot;: 0.025974026, &quot;see&quot;: 0.0064935065, &quot;hear&quot;: 0.012987013, &quot;feel&quot;: 0.0064935065, &quot;bio&quot;: 0.0032467532, &quot;body&quot;: 0.0032467532, &quot;health&quot;: 0, &quot;sexual&quot;: 0, &quot;ingest&quot;: 0, &quot;drives&quot;: 0.06818182, &quot;affiliation&quot;: 0.0032467532, &quot;achieve&quot;: 0.0064935065, &quot;power&quot;: 0.045454547, &quot;reward&quot;: 0.016233766, &quot;risk&quot;: 0, &quot;focuspast&quot;: 0.051948052, &quot;focuspresent&quot;: 0.14935064, &quot;focusfuture&quot;: 0.012987013, &quot;relativ&quot;: 0.1396104, &quot;motion&quot;: 0.029220778, &quot;space&quot;: 0.07467532, &quot;time&quot;: 0.048701297, &quot;work&quot;: 0.0097402595, &quot;leisure&quot;: 0.0032467532, &quot;home&quot;: 0, &quot;money&quot;: 0.0064935065, &quot;relig&quot;: 0.0097402595, &quot;death&quot;: 0, &quot;informal&quot;: 0.016233766, &quot;swear&quot;: 0, &quot;netspeak&quot;: 0, &quot;assent&quot;: 0.0032467532, &quot;nonflu&quot;: 0.012987013, &quot;filler&quot;: 0, &quot;AllPunc&quot;: 0.2564935, &quot;Period&quot;: 0.09415584, &quot;Comma&quot;: 0.071428575, &quot;Colon&quot;: 0, &quot;SemiC&quot;: 0, &quot;QMark&quot;: 0, &quot;Exclam&quot;: 0, &quot;Dash&quot;: 0.0032467532, &quot;Quote&quot;: 0.045454547, &quot;Apostro&quot;: 0.038961038, &quot;Parenth&quot;: 0, &quot;OtherP&quot;: 0.0032467532 } }, &quot;personality_snapshot&quot;: [ { &quot;summary&quot;: &quot;Poorly-adjusted&quot;, &quot;description&quot;: &quot;May exhibit questionable judgement, and their opinions may not be particularly grounded in facts and reality.&quot; }, { &quot;summary&quot;: &quot;Nonchalant&quot;, &quot;description&quot;: &quot;May procrastinate or wait until deadlines approach before getting started. Seldom puts in extra time to complete projects.&quot; }, { &quot;summary&quot;: &quot;Emotional thinking style&quot;, &quot;description&quot;: &quot;Tends to think in the here-and-now and bases decisions almost entirely on their feelings and intuition. Makes decisions quickly and may be resistant to changing their opinion.&quot; } ], &quot;communication_recommendation&quot;: &quot;Get to know them before getting to the point. Influence them by appealing to their emotions. Don&#39;t waste their time with small-talk. Be prepared to give advice and share your opinion.&quot;, &quot;emotional_analysis&quot;: { &quot;emotional_tone&quot;: { &quot;score&quot;: 83.48441, &quot;rating&quot;: &quot;Positive&quot; }, &quot;facets&quot;: { &quot;sad&quot;: 0, &quot;anger&quot;: 49.99999923, &quot;fear&quot;: 0 } }, &quot;_links&quot;: {} } .",
    "url": "http://localhost:4000/pages/example_api_response.html",
    "relUrl": "/pages/example_api_response.html"
  }
  ,"8": {
    "title": "Getting Started With the Receptiviti API",
    "content": "Getting Started With the Receptiviti API . Once we set up your account, you will receive an email with a link to the web interface of our API. You must get your API Key and API Secret Key (password) in order to start using the API, which you will find in the CSV file generated from the instructions below. . To get your API Key and API Secret Key: . Navigate to the Receptiviti API by clicking the link in the email we sent you. | Click Generate API Key. | Open the CSV file and copy the API Key under the api_key cell. | Paste the key in the appropriate field, depending on how you are interacting with the API, e.g., Swagger or cURL. (See below for full details.) | Copy the Secret Key under the api_secret_key cell. | Paste the key in the appropriate field, depending on how you are interacting with the API, e.g., Swagger or cURL. (See below for full details.) | There are several ways to interact with the Receptiviti API: . Command line: By using cURL, you can make API calls and get minified JSON results. (You can use a service like https://pretty-print-json.js.org/ to make it more readable.) See sample code and responses here and here. . | Receptiviti Open API/Swagger page: Here, you can post samples and get results in JSON, as well as have your calls converted to cURL format for copy-and-pasting to the command line, if you wish to do so. Access this here. . | Web application: We provide a user interface where you can upload language samples and get results. This is a simple way to get quick results, but it is not designed for large-scale analysis projects. Access the UI here. Your programming language of choice: This will be the method of choice for data scientists, machine learning modellers, statisticians, and other users with experience using APIs. . | Your programming language of choice: This will be the method of choice for data scientists, machine learning modellers, statisticians, and other users with experience using APIs. . | . IMPORTANT NOTE: Be sure to store your API Key and API Secret Key in a place where it is easy for you to access. .",
    "url": "http://localhost:4000/pages/getting_started.html",
    "relUrl": "/pages/getting_started.html"
  }
  ,"9": {
    "title": "Glossary",
    "content": "Glossary . API Key: A unique code generated by the API server. You cannot use the API without a valid API key. . API Secret Key: A password that authenticates users. The system generates a new API Secret Key each time you click Generate API Key. . API Call: The act of inputting a request and receiving a response from the API. This combines actions through an HTTP method that uses the API service URL and uses optional query parameters for filtering and pagination. This includes obtaining authorization with the access token, and returns a JSON-formatted request body. . cURL: Used through the command line interface of your computer, cURL is a software that communicates with tools such as APIs, and uses methods such as HTTP to do so. Read more here. . Endpoint: A type of URL that expresses the path of a resource to be returned from an API call, indicating how you access the resource. . OpenAPI/Swagger: Open API, formerly known as Swagger, is a tool that allows you to build the structure of your API so that it is machine-readable, and allows you to generate interactive documentation based on the specification sheet that’s created when building the API. Read more here. . Resource: Broad terminology for information returned from an API call. .",
    "url": "http://localhost:4000/pages/glossary.html",
    "relUrl": "/pages/glossary.html"
  }
  ,"10": {
    "title": "",
    "content": "",
    "url": "http://localhost:4000/",
    "relUrl": "/"
  }
  ,"11": {
    "title": "Interpreting API Responses",
    "content": "Interpreting API Responses . The Receptiviti API returns results based on four separate analyses: . LIWC scores (0-100); . | Receptiviti scores (0-100); . | Raw scores (5-point scale based that utilizes a logarithmic distribution of results); . | LSM assessments. . | Based on the results, the algorithm generates a series of three personality snapshots, each comprised of two sentences that describe a personality type of a person whose language sample was analyzed, along with a one- to two-word summary, such as ‘Analytical thinker,’ ‘Persuasive,’ or ‘Easy-going.’ These snapshots follow the list of scores. See the list of metrics and scores here. . Following a personality snapshots, there are two aggregated scores referred to as Emotional Analysis: . Emotional Tone Scores range from Negative (1) to Positive (99). A score around 50 is considered neutral and suggests either a lack of emotionality or similar amounts of positive and negative emotions. . | Emotional Analysis: Each Emotional Analysis facet score (anger, fear, sad) indicates how the percentage of the total negative emotion expressed in the language sample corresponds with each primary negative emotion. . | . NOTE: At this time, the Receptiviti API only accepts English language samples . . . We group Receptiviti scores into the five types of psychological insights they represent: . Cognitive/Thinking Style . | Social Style . | Emotional Style . | Working Style . | The Big Five . | .",
    "url": "http://localhost:4000/pages/interpreting_api_responses.html",
    "relUrl": "/pages/interpreting_api_responses.html"
  }
  ,"12": {
    "title": "Making a Call to the Receptiviti API",
    "content": "Making a Call to the Receptiviti API . . Making a call to the API using cURL | Making a call to the API using the Receptiviti Open API/Swagger page | Making a call to the API using the web interface | Using Python to call the API | The model below indicates the parameters that are passed on the API call. The asterisk indicates required fields. Note that we recommend at least 300 words per text sample to most accurately reflect the extent of a psychological state at the time of a sample’s creation. . Parameters Type Description . language_content* | String | This is the actual content of the text sample(s) you provide to the API. | . content_tags | String | If using, list your tags here. (Default: []) | . content_handle | String | A reference ID for the content. This is stored and returned on subsequent GET calls. | . language | String | This specifies the language of the content. Currently, The supported languages are English, Spanish, Dutch, French, and German. | . content_source* | Integer | This is the source of the material of the text sample being provided. 1=Personal Writing2=Personal Email Correspondence3=Professional Correspondence4=Social Media5=Commercial Writing6=Professional or Scientific Writing0=OtherDefault: 0 | . content_date* | String | This specifies the date of the content. The default will be the date the call is made. Format: YYYY-MM-DDT00:00:00.00000 | . recipient_id | String | If the writing sample was a conversation with another person who has been created in the system, provide the recipient_ID for that person. | . language_content* | String | This is the actual content of the text sample(s) you provide to the API. | . . Making a call to the API using cURL . Copy the cURL example code below. curl -X POST &quot;https://api-v3.receptiviti.com/v3/api/content&quot; -H &quot;accept: application/json&quot; -H &quot;X-API-SECRET-KEY: Enter your API Secret Key here&quot; -H &quot;X-API-KEY: Enter your API Key here&quot; -H &quot;Content-Type: application/json&quot; -d &quot;{ &quot;content_tags &quot;: [ &quot;string &quot; ], &quot;content_handle &quot;: &quot;string &quot;, &quot;language &quot;: &quot;English &quot;, &quot;content_source &quot;: 0, &quot;content_date &quot;: &quot;2020-01-01 &quot;, &quot;recipient_id &quot;: &quot;string &quot;, &quot;language_content &quot;: &quot;Enter your language sample here &quot;} . | Paste the cURL call into your text editor of choice. (Sublime Text, Atom, etc.). | Copy your API Key and API Secret Key and paste them into the sections of the cURL code fields and paste to replace where it says Enter your API Secret Key here and Enter your API Key here. | Copy your language sample and paste to replace where it says Enter your language sample here. | Copy the code and paste it to your command line terminal. | Press return. | NOTE: To read the results more clearly you can paste your response into an online tool such as https://pretty-print-json.js.org. . . Making a call to the API using the Receptiviti Open API/Swagger page . Go to http://api-v3.receptiviti.com/auth/login and log in using your credentials. | Click Explore API. This opens the Receptiviti Open API/Swagger page. . . | Click Post, then click Try it out. . . | In the Edit Value | Model box, replace “string” with your values and text sample. { &quot;language_content&quot;: &quot;&quot;, &quot;content_handle&quot;: &quot;string&quot;, &quot;content_date&quot;: &quot;string&quot;, &quot;content_source&quot;: 0, &quot;recipient_id&quot;: &quot;string&quot;, &quot;content_tags&quot;: [ &quot;string&quot; ], &quot;language&quot;: &quot;string&quot; } . The only mandatory fields are language, content_date, and language_content. The date format is YYYY-MM-DD. . | Below the Edit Value / Model box, paste your API Key and API Secret Key in their respective fields. | Click Execute. | Making a call to the API using the web interface . Go to http://api-v3.receptiviti.com/auth/login and log in using your credentials. | On the Analyze Content page, paste your text sample in the Paste Text Here box. | From the Content Source drop-down menu, select the applicable source of your text sample. | Click Analyze. . . | NOTE:This page is intended for ad-hoc analysis. Any data entered and results generated on this page are not stored, and are not retrievable once you leave this page. . . Using Python to call the API . The following is a basic code sample in Python to help you get started with the Receptiviti API: . import requests def get_liwc_scores(text, api_secret_key, api_key): text = text.encode(&#39;ascii&#39;, &#39;ignore&#39;).decode(&#39;utf-8&#39;) text_repl = text.replace(&#39;&quot;&#39;, r&#39; &quot;&#39;) url = &#39;https://api-v3.receptiviti.com/v3/api/content&#39; headers = {&#39;accept&#39;: &#39;application/json&#39;, &#39;X-API-SECRET-KEY&#39;: api_secret_key, &#39;X-API-KEY&#39;: api_key, &#39;Content-Type&#39;: &#39;application/json&#39;} data = &quot;{ &quot;content_tags &quot;: [ &quot;string &quot; ], &quot;content_handle &quot;: &quot;string &quot;, &quot;language &quot;: &quot;pa_english &quot;, &quot;content_source &quot;: 0, &quot;content_date &quot;: &quot;2020-01-01 &quot;, &quot;recipient_id &quot;: &quot;string &quot;, &quot;language_content &quot;: &quot;&quot; + text_repl + &quot; &quot;}&quot; r = requests.post(url, data=data, headers=headers) return r text = “paste your text sample here” api_secret_key = “paste your api secret key here” api_key = “paste your api key here” r = get_liwc_scores(text, api_secret_key, api_key) r . NOTE: We strongly advise against merging text from multiple sources into one post (e.g., Twitter, Facebook, transcripts, etc.). If you plan to analyze content from multiple sources, we recommend creating a separate Person ID for each type of content. For example, to analyze Person A’s Twitter and Facebook samples, create one Person_A_Twitter person_ID to which only Person A’s Twitter samples are sent, and one Person_A_Facebook person_ID to which only Person A’s Facebook samples are sent. .",
    "url": "http://localhost:4000/pages/making_api_call.html",
    "relUrl": "/pages/making_api_call.html"
  }
  ,"13": {
    "title": "Receptiviti API Overview",
    "content": "Receptiviti API Overview . Our API allows you to upload and analyze individual writing samples, or to submit and timestamp multiple writing samples from a person or from multiple people. The API will return a series of scores that have been analyzed through LIWC and the Receptiviti engine (for information on these scores, see Receptiviti Metrics Explained). . By engaging with the Receptiviti API, you can gain immensely valuable insight into the emotional state of individuals or groups of people at the time the language was spoken or written, allowing you to better understand how the communication within your company affects the entire organization. . Based on REST principles, the Receptiviti API endpoints return JSON-formatted data analyzed from language samples. . NOTE: By using the Receptiviti API, you agree to the Terms and Conditions. .",
    "url": "http://localhost:4000/pages/receptiviti_api_overview.html",
    "relUrl": "/pages/receptiviti_api_overview.html"
  }
  ,"14": {
    "title": "Response Definitions",
    "content": "Response Definitions . The Receptiviti API returns a mix of several types of metrics, covered in more detail in the Interpreting Receptiviti API Responses section. The table below defines the metrics that make up LIWC and Receptiviti scores. . Field Description .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .",
    "url": "http://localhost:4000/pages/response_definitions.html",
    "relUrl": "/pages/response_definitions.html"
  }
  ,"15": {
    "title": "API Terminology",
    "content": "API Terminology . These are terms that you will find throughout this guide: . REST (or RESTful): This stands for Representational State Transfer, which is the architecture that most current web APIs are based on. It is a style of design that allows APIs to be user-friendly, low on computational resources, and easily scalable for high-volume workload. . The major advantage of this design is that data are transferred to and from an API via HTTP, which functions as a programming language-agnostic way to ensure compatibility between applications and services. Virtually any web-enabled program can use a REST API. . JSON: This stands for JavaScript Object Notation, which is a text format based on the JavaScript programming language. Using JSON provides a method of data exchange that is human readable — as in developers can easily read and write it — and it is also machine readable, meaning computers can easily parse it. JSON has become universal, acting as a kind of interpreter or connector between disparate programming languages, which is helpful considering different API developers use different languages. . When you make a call to an API, data are returned in JSON format, which looks like this: . { &quot;content_tags&quot;: [ &quot;string&quot; ], &quot;content_handle&quot;: &quot;string&quot;, &quot;language&quot;: &quot;string&quot;, &quot;content_source&quot;: 0, &quot;content_date&quot;: &quot;string&quot;, &quot;recipient_id&quot;: &quot;string&quot;, &quot;language_content&quot;: &quot;string&quot; } . API Key: A unique code generated by the API server. You cannot use the API without a valid API key. . API Secret Key: A password that authenticates users. In the Receptiviti API, the system generates a new API Secret Key each time you click Generate API Key. . cURL: Used through the command line interface of your computer, cURL is a software that communicates with tools such as APIs, and uses methods such as HTTP to do so. Read more here. . Resource: Broad terminology for information returned from an API call. . Endpoint: A type of URL that expresses the path of a resource to be returned from an API call, indicating how you access the resource. . LIWC: Acronym for Linguistic Inquiry Word Count. A framework developed by social psychologist Dr. James Pennebaker and his team that utilizes a dictionary comprised of a growing number of categories, each containing words that indicate particular psychological states. We use LIWC categories in the Receptiviti API. . LSM: Acronym for Language Style Matching. LSM is based on research by James W. Pennebaker that analyzes the relationship between rapport and the degree to which people show similar rates of function word use when they communicate with each other. Identifying the commonalities and differences in their relative use of function words is key to understanding the degree to which the two people are in sync. . OpenAPI/Swagger: Open API, formerly known as Swagger, is a tool that allows you to build the structure of your API so that it is machine-readable, and allows you to generate interactive documentation based on the specification sheet that’s created when building the API. Read more here. .",
    "url": "http://localhost:4000/pages/terminology.html",
    "relUrl": "/pages/terminology.html"
  }
  ,"16": {
    "title": "Text Sample Formatting",
    "content": "Text Sample Formatting . . Spelling, Abbreviations, and Contractions | End-of-Sentence Markers and Hyphens | Time Markers | The Receptiviti API does not discriminate between upper- and lower-case letters. It can only count words contained in the LIWC2015 dictionary (the most recent version of LIWC). It it cannot accommodate the following: . Misspellings . | Colloquialisms . | Foreign words . | Proper names . | Scientific or technical terms . | Most abbreviations . | . That said, occasional spelling mistakes are less problematic the more words a language sample contains. However, you should take time to correct any consistent misspellings. . Spelling, Abbreviations, and Contractions . The Receptiviti API accommodates both United States and British English spelling. It can also accommodate common verb contractions including don’t, won’t, isn’t, shouldn’t, can’t, couldn’t, I’m, I’ll, I’d, we’re, we’d, you’re, he’s, and it’s. It will count most others as possessive nouns, as seen in a phrase such as “Sally’s shoes.” In the case of something like “Sally’s going to the store,” the results will be improved when changing “Sally’s” to “Sally is.” . End-of-Sentence Markers and Hyphens . One of the scores returned from the Receptiviti API is the The Words Per Sentence (WPS) category. It counts the number of times that it detects end-of-sentence markers. These include punctuation such as periods, question marks, and exclamation points. However, common abbreviations (such as Dr., Mrs., U.S.A., D.O.A.) will be counted as multiple sentences unless you remove the periods. . NOTE: Be careful that the removal of the periods doesn’t inadvertently create a new word. For example, U.S. (the United States) becomes US (first-person plural pronoun) when the periods are removed. In this case, change it to USA. . When words start or end with hyphens, LIWC2015 interprets the hyphens as part of the word. Whereas LIWC2015 contains the word chit-chat, it would interpret a connected term like this-or-that as three separate words. . Time Markers . When formatting the time markers a.m. and p.m., we recommend that you remove the space between the number and the marker since LIWC interprets a.m. as the first-person verb am (I am), e.g., 6:30am instead of 6:30 a.m. .",
    "url": "http://localhost:4000/pages/test_sample_formatting.html",
    "relUrl": "/pages/test_sample_formatting.html"
  }
  
}